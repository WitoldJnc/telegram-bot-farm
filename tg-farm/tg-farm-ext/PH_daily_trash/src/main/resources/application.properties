api.bot.cookie=${API_BOT_COOKIE}
api.bot.resource=${API_BOT_RESOURCE}
api.bot.mnemonic=PH_BT
api.page.count=${PAGE_COUNT}

server.port=${PORT:8081}

#for docker-compose
db.url=jdbc:postgresql://tg-farm-postgres:5432/postgres
#for postgre local container
#db.url=jdbc:postgresql://localhost:5432/postgres

db.username=postgres
db.password=postgres

spring.datasource.url=${JDBC_DATABASE_URL:${db.url}}
spring.datasource.username=${DATABASE_USERNAME:${db.username}}
spring.datasource.password=${DATABASE_PASSWORD:${db.password}}
spring.datasource.driver-class-name=org.postgresql.Driver

spring.flyway.url=${JDBC_DATABASE_URL:${db.url}}
spring.flyway.defaultSchema=public
spring.flyway.schemas=public
spring.flyway.user=${DATABASE_USERNAME:${db.username}}
spring.flyway.password=${DATABASE_PASSWORD:${db.password}}

spring.flyway.locations=classpath:db/migration/
spring.flyway.enabled=${ENABLE_MIGRATION:true}

spring.jpa.show-sql=false
spring.jpa.hibernate.ddl-auto=none
#spring.jpa.hibernate.ddl-auto=create
#spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

ph.tg.bot.prod.api.key=${TG_BOT_PROD_KEY}
ph.tg.bot.prod.api.name=${TG_BOT_PROD_NAME}

ph.tg.bot.plus.api.key=${TG_BOT_PLUS_KEY}
ph.tg.bot.plus.api.name=${TG_BOT_PLUS_NAME}